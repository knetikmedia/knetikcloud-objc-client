#import <Foundation/Foundation.h>
#import "SWGPageResourceMapStringObject_.h"
#import "SWGSearchReferenceMapping.h"
#import "SWGApi.h"

/**
* Knetik Platform API Documentation Latest
* This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
*
* OpenAPI spec version: Latest
* Contact: support@knetik.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGSearchApi: NSObject <SWGApi>

extern NSString* kSWGSearchApiErrorDomain;
extern NSInteger kSWGSearchApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Add a new object to an index
/// Mainly intended for internal use.
///
/// @param type The index type
/// @param _id The ID of the object
/// @param object The object to add (optional)
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
-(NSNumber*) externalAddUsingPOSTWithType: (NSString*) type
    _id: (NSString*) _id
    object: (NSObject*) object
    completionHandler: (void (^)(NSError* error)) handler;

/// Delete all objects in an index
/// Mainly intended for internal use
///
/// @param type The index type
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
-(NSNumber*) externalDeleteAllUsingDELETEWithType: (NSString*) type
    completionHandler: (void (^)(NSError* error)) handler;

/// Delete an object
/// Mainly intended for internal use. Requires SEARCH_ADMIN.
///
/// @param type The index type
/// @param _id The ID of the object to delete
///  code:200 message:"OK",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
-(NSNumber*) externalDeleteUsingDELETEWithType: (NSString*) type
    _id: (NSString*) _id
    completionHandler: (void (^)(NSError* error)) handler;

/// Register reference mappings
/// Add a new type mapping to connect data from one index to another, or discover an exsting one. Mainly intended for internal use.
///
/// @param mappings The mappings to add (optional)
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
-(NSNumber*) externalRegisterUsingPOSTWithMappings: (NSArray<SWGSearchReferenceMapping>*) mappings
    completionHandler: (void (^)(NSError* error)) handler;

/// Search an index
/// The body is an ElasticSearch query in JSON format. Please see their <a href='https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html'>documentation</a> for details on the format and search options. The searchable object's format depends on on the type. See individual search endpoints on other resources for details on their format.
///
/// @param type The index type
/// @param query The query to be used for the search (optional)
/// @param size The number of objects returned per page (optional) (default to 25)
/// @param page The number of the page returned, starting with 1 (optional) (default to 1)
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
/// @return SWGPageResourceMapStringObject_*
-(NSNumber*) searchUsingPOSTWithType: (NSString*) type
    query: (NSObject*) query
    size: (NSNumber*) size
    page: (NSNumber*) page
    completionHandler: (void (^)(SWGPageResourceMapStringObject_* output, NSError* error)) handler;


@end
