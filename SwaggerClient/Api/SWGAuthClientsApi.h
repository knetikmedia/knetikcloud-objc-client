#import <Foundation/Foundation.h>
#import "SWGClientResource.h"
#import "SWGGrantTypeResource.h"
#import "SWGPageClientResource_.h"
#import "SWGApi.h"

/**
* Knetik Platform API Documentation Latest
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: Latest
* Contact: support@knetik.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGAuthClientsApi: NSObject <SWGApi>

extern NSString* kSWGAuthClientsApiErrorDomain;
extern NSInteger kSWGAuthClientsApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Set grant types for a client
/// 
///
/// @param clientKey The key of the client
/// @param grantList A list of unique grant types (optional)
/// 
///  code:201 message:"Created",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return 
-(NSNumber*) assignClientGrantTypesUsingPUTWithClientKey: (NSString*) clientKey
    grantList: (NSArray<NSString*>*) grantList
    completionHandler: (void (^)(NSError* error)) handler;


/// Set redirect uris for a client
/// 
///
/// @param clientKey The key of the client
/// @param redirectList A list of unique redirect uris (optional)
/// 
///  code:201 message:"Created",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return 
-(NSNumber*) assignClientRedirectUrisUsingPUTWithClientKey: (NSString*) clientKey
    redirectList: (NSArray<NSString*>*) redirectList
    completionHandler: (void (^)(NSError* error)) handler;


/// Create a new client
/// 
///
/// @param clientResource The client resource object (optional)
/// 
///  code:200 message:"OK",
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGClientResource*
-(NSNumber*) createClientUsingPOSTWithClientResource: (SWGClientResource*) clientResource
    completionHandler: (void (^)(SWGClientResource* output, NSError* error)) handler;


/// Delete a client
/// 
///
/// @param clientKey The key of the client
/// 
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
///
/// @return 
-(NSNumber*) deleteClientUsingDELETEWithClientKey: (NSString*) clientKey
    completionHandler: (void (^)(NSError* error)) handler;


/// Get a single client
/// 
///
/// @param clientKey The key of the client
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGClientResource*
-(NSNumber*) getClientUsingGETWithClientKey: (NSString*) clientKey
    completionHandler: (void (^)(SWGClientResource* output, NSError* error)) handler;


/// List and search clients
/// 
///
/// @param size The number of objects returned per page (optional) (default to 25)
/// @param page The number of the page returned, starting with 1 (optional) (default to 1)
/// @param order a comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional) (default to 1)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGPageClientResource_*
-(NSNumber*) getClientsUsingGETWithSize: (NSNumber*) size
    page: (NSNumber*) page
    order: (NSString*) order
    completionHandler: (void (^)(SWGPageClientResource_* output, NSError* error)) handler;


/// List available client grant types
/// 
///
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return NSArray<SWGGrantTypeResource>*
-(NSNumber*) listAvailableGrantTypesUsingGETWithCompletionHandler: 
    (void (^)(NSArray<SWGGrantTypeResource>* output, NSError* error)) handler;


/// Update a client
/// 
///
/// @param clientKey The key of the client
/// @param clientResource The client resource object (optional)
/// 
///  code:201 message:"Created",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return 
-(NSNumber*) updateClientUsingPUTWithClientKey: (NSString*) clientKey
    clientResource: (SWGClientResource*) clientResource
    completionHandler: (void (^)(NSError* error)) handler;



@end
