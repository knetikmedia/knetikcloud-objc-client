#import <Foundation/Foundation.h>
#import "SWGArtistResource.h"
#import "SWGPageResourceArtistResource_.h"
#import "SWGPageResourceTemplateResource_.h"
#import "SWGTemplateResource.h"
#import "SWGApi.h"

/**
* Knetik Platform API Documentation Latest
* This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
*
* OpenAPI spec version: Latest
* Contact: support@knetik.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGMediaArtistsApi: NSObject <SWGApi>

extern NSString* kSWGMediaArtistsApiErrorDomain;
extern NSInteger kSWGMediaArtistsApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Adds a new artist in the system
/// Adds a new artist in the system. Use specific media contributions endpoint to add contributions
///
/// @param artistResource The new artist (optional)
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
/// @return SWGArtistResource*
-(NSNumber*) addArtistUsingPOSTWithArtistResource: (SWGArtistResource*) artistResource
    completionHandler: (void (^)(SWGArtistResource* output, NSError* error)) handler;

/// Create an artist template
/// Artist Templates define a type of artist and the properties they have
///
/// @param artistTemplateResource The artist template resource object (optional)
///  code:201 message:"Created",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
/// @return SWGTemplateResource*
-(NSNumber*) createArtistTemplateUsingPOSTWithArtistTemplateResource: (SWGTemplateResource*) artistTemplateResource
    completionHandler: (void (^)(SWGTemplateResource* output, NSError* error)) handler;

/// Delete an artist template
/// If cascade = 'detach', it will force delete the template even if it's attached to other objects
///
/// @param _id The id of the template
/// @param cascade The value needed to delete used templates (optional)
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
-(NSNumber*) deleteArtistTemplateUsingDELETEWithId: (NSString*) _id
    cascade: (NSString*) cascade
    completionHandler: (void (^)(NSError* error)) handler;

/// Removes an artist from the system IF no resources are attached to it
///
/// @param _id The artist id
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden"
-(NSNumber*) deleteArtistUsingDELETEWithId: (NSNumber*) _id
    completionHandler: (void (^)(NSError* error)) handler;

/// Get a single artist template
///
/// @param _id The id of the template
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
/// @return SWGTemplateResource*
-(NSNumber*) getArtistTemplateUsingGETWithId: (NSString*) _id
    completionHandler: (void (^)(SWGTemplateResource* output, NSError* error)) handler;

/// List and search artist templates
///
/// @param size The number of objects returned per page (optional) (default to 25)
/// @param page The number of the page returned, starting with 1 (optional) (default to 1)
/// @param order A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional) (default to id:ASC)
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
/// @return SWGPageResourceTemplateResource_*
-(NSNumber*) getArtistTemplatesUsingGETWithSize: (NSNumber*) size
    page: (NSNumber*) page
    order: (NSString*) order
    completionHandler: (void (^)(SWGPageResourceTemplateResource_* output, NSError* error)) handler;

/// Loads a specific artist details
///
/// @param _id The artist id
/// @param showContributions The number of contributions to show fetch (optional)
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
/// @return SWGArtistResource*
-(NSNumber*) getArtistUsingGETWithId: (NSNumber*) _id
    showContributions: (NSNumber*) showContributions
    completionHandler: (void (^)(SWGArtistResource* output, NSError* error)) handler;

/// Search for artists
///
/// @param filterArtistsByName Filter for artists which name *STARTS* with the given string (optional)
/// @param size The number of objects returned per page (optional) (default to 25)
/// @param page The number of the page returned, starting with 1 (optional) (default to 1)
/// @param order A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional) (default to id:ASC)
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
/// @return SWGPageResourceArtistResource_*
-(NSNumber*) searchArtistsUsingGETWithFilterArtistsByName: (NSString*) filterArtistsByName
    size: (NSNumber*) size
    page: (NSNumber*) page
    order: (NSString*) order
    completionHandler: (void (^)(SWGPageResourceArtistResource_* output, NSError* error)) handler;

/// Update an artist template
///
/// @param _id The id of the template
/// @param artistTemplateResource The artist template resource object (optional)
///  code:201 message:"Created",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
-(NSNumber*) updateArtistTemplateUsingPUTWithId: (NSString*) _id
    artistTemplateResource: (SWGTemplateResource*) artistTemplateResource
    completionHandler: (void (^)(NSError* error)) handler;

/// Modifies an artist details
///
/// @param _id The artist id
/// @param artistResource The new artist (optional)
///  code:201 message:"Created",
///  code:204 message:"No Content",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
-(NSNumber*) updateArtistUsingPUTWithId: (NSNumber*) _id
    artistResource: (SWGArtistResource*) artistResource
    completionHandler: (void (^)(NSError* error)) handler;


@end
