#import <Foundation/Foundation.h>
#import "JSAPIBreTriggerResource.h"
#import "JSAPIPageResourceBreTriggerResource_.h"
#import "JSAPIResult.h"
#import "JSAPIApi.h"

/**
* Knetik Platform API Documentation latest 
* This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
*
* OpenAPI spec version: latest 
* Contact: support@knetik.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface JSAPIRuleEngineTriggersApi: NSObject <JSAPIApi>

extern NSString* kJSAPIRuleEngineTriggersApiErrorDomain;
extern NSInteger kJSAPIRuleEngineTriggersApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(JSAPIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create a trigger
/// Customer added triggers will not be fired automatically or have rules associated with them by default. Custom rules must be added to get use from the trigger and it must then be fired from the outside. See the Bre Event services. <br><br><b>Permissions Needed:</b> BRE_RULE_ENGINE_TRIGGERS_ADMIN
///
/// @param breTriggerResource The BRE trigger resource object (optional)
/// 
///  code:201 message:"Created",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIBreTriggerResource*
-(NSURLSessionTask*) createBRETriggerWithBreTriggerResource: (JSAPIBreTriggerResource*) breTriggerResource
    completionHandler: (void (^)(JSAPIBreTriggerResource* output, NSError* error)) handler;


/// Delete a trigger
/// May fail if there are existing rules against it. Cannot delete core triggers. <br><br><b>Permissions Needed:</b> BRE_RULE_ENGINE_TRIGGERS_ADMIN
///
/// @param eventName The trigger event name
/// 
///  code:204 message:"No Content",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return void
-(NSURLSessionTask*) deleteBRETriggerWithEventName: (NSString*) eventName
    completionHandler: (void (^)(NSError* error)) handler;


/// Get a single trigger
/// <b>Permissions Needed:</b> BRE_RULE_ENGINE_TRIGGERS_USER
///
/// @param eventName The trigger event name
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIBreTriggerResource*
-(NSURLSessionTask*) getBRETriggerWithEventName: (NSString*) eventName
    completionHandler: (void (^)(JSAPIBreTriggerResource* output, NSError* error)) handler;


/// List triggers
/// <b>Permissions Needed:</b> BRE_RULE_ENGINE_TRIGGERS_USER
///
/// @param filterSystem Filter for triggers that are system triggers when true, or not when false. Leave off for both mixed (optional)
/// @param filterCategory Filter for triggers that are within a specific category (optional)
/// @param filterTags Filter for triggers that have all of the given tags (comma separated list) (optional)
/// @param filterName Filter for triggers that have names containing the given string (optional)
/// @param filterSearch Filter for triggers containing the given words somewhere within name, description and tags (optional)
/// @param size The number of objects returned per page (optional) (default to 25)
/// @param page The number of the page returned, starting with 1 (optional) (default to 1)
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIPageResourceBreTriggerResource_*
-(NSURLSessionTask*) getBRETriggersWithFilterSystem: (NSNumber*) filterSystem
    filterCategory: (NSString*) filterCategory
    filterTags: (NSString*) filterTags
    filterName: (NSString*) filterName
    filterSearch: (NSString*) filterSearch
    size: (NSNumber*) size
    page: (NSNumber*) page
    completionHandler: (void (^)(JSAPIPageResourceBreTriggerResource_* output, NSError* error)) handler;


/// Update a trigger
/// May fail if new parameters mismatch requirements of existing rules. Cannot update core triggers. <br><br><b>Permissions Needed:</b> BRE_RULE_ENGINE_TRIGGERS_ADMIN
///
/// @param eventName The trigger event name
/// @param breTriggerResource The BRE trigger resource object (optional)
/// 
///  code:204 message:"No Content",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIBreTriggerResource*
-(NSURLSessionTask*) updateBRETriggerWithEventName: (NSString*) eventName
    breTriggerResource: (JSAPIBreTriggerResource*) breTriggerResource
    completionHandler: (void (^)(JSAPIBreTriggerResource* output, NSError* error)) handler;



@end
