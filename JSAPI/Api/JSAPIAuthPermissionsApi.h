#import <Foundation/Foundation.h>
#import "JSAPIPageResourcePermissionResource_.h"
#import "JSAPIPermissionResource.h"
#import "JSAPIResult.h"
#import "JSAPIApi.h"

/**
* Knetik Platform API Documentation latest 
* This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
*
* OpenAPI spec version: latest 
* Contact: support@knetik.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface JSAPIAuthPermissionsApi: NSObject <JSAPIApi>

extern NSString* kJSAPIAuthPermissionsApiErrorDomain;
extern NSInteger kJSAPIAuthPermissionsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(JSAPIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create a new permission
/// <b>Permissions Needed:</b> PERMISSIONS_ADMIN
///
/// @param permissionResource The permission resource object (optional)
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIPermissionResource*
-(NSURLSessionTask*) createPermissionWithPermissionResource: (JSAPIPermissionResource*) permissionResource
    completionHandler: (void (^)(JSAPIPermissionResource* output, NSError* error)) handler;


/// Delete a permission
/// <b>Permissions Needed:</b> PERMISSIONS_ADMIN
///
/// @param permission The permission value
/// @param force If true, removes permission assigned to roles (optional)
/// 
///  code:204 message:"No Content",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return void
-(NSURLSessionTask*) deletePermissionWithPermission: (NSString*) permission
    force: (NSNumber*) force
    completionHandler: (void (^)(NSError* error)) handler;


/// Get a single permission
/// <b>Permissions Needed:</b> PERMISSIONS_ADMIN
///
/// @param permission The permission value
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIPermissionResource*
-(NSURLSessionTask*) getPermissionWithPermission: (NSString*) permission
    completionHandler: (void (^)(JSAPIPermissionResource* output, NSError* error)) handler;


/// List and search permissions
/// <b>Permissions Needed:</b> PERMISSIONS_ADMIN
///
/// @param size The number of objects returned per page (optional) (default to 25)
/// @param page The number of the page returned, starting with 1 (optional) (default to 1)
/// @param order A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional) (default to permission:ASC)
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIPageResourcePermissionResource_*
-(NSURLSessionTask*) getPermissionsWithSize: (NSNumber*) size
    page: (NSNumber*) page
    order: (NSString*) order
    completionHandler: (void (^)(JSAPIPageResourcePermissionResource_* output, NSError* error)) handler;


/// Update a permission
/// <b>Permissions Needed:</b> PERMISSIONS_ADMIN
///
/// @param permission The permission value
/// @param permissionResource The permission resource object (optional)
/// 
///  code:204 message:"No Content",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIPermissionResource*
-(NSURLSessionTask*) updatePermissionWithPermission: (NSString*) permission
    permissionResource: (JSAPIPermissionResource*) permissionResource
    completionHandler: (void (^)(JSAPIPermissionResource* output, NSError* error)) handler;



@end
