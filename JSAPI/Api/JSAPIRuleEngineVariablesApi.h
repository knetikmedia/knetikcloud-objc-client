#import <Foundation/Foundation.h>
#import "JSAPIPageResourceSimpleReferenceResourceObject_.h"
#import "JSAPIResult.h"
#import "JSAPIVariableTypeResource.h"
#import "JSAPIApi.h"

/**
* Knetik Platform API Documentation latest 
* This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
*
* OpenAPI spec version: latest 
* Contact: support@knetik.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface JSAPIRuleEngineVariablesApi: NSObject <JSAPIApi>

extern NSString* kJSAPIRuleEngineVariablesApiErrorDomain;
extern NSInteger kJSAPIRuleEngineVariablesApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(JSAPIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Get a list of variable types available
/// Types include integer, string, user and invoice. These are used to qualify trigger parameters and action variables with strong typing. <br><br><b>Permissions Needed:</b> BRE_RULE_ENGINE_VARIABLES_USER
///
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return NSArray<JSAPIVariableTypeResource>*
-(NSURLSessionTask*) getBREVariableTypesWithCompletionHandler: 
    (void (^)(NSArray<JSAPIVariableTypeResource>* output, NSError* error)) handler;


/// List valid values for a type
/// Used to lookup users to fill in a user constant for example. Only types marked as enumerable are suppoorted here. <br><br><b>Permissions Needed:</b> BRE_RULE_ENGINE_VARIABLES_USER
///
/// @param name The name of the type
/// @param filterName Filter results by those with names starting with this string (optional)
/// @param size The number of objects returned per page (optional) (default to 25)
/// @param page The number of the page returned, starting with 1 (optional) (default to 1)
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIPageResourceSimpleReferenceResourceObject_*
-(NSURLSessionTask*) getBREVariableValuesWithName: (NSString*) name
    filterName: (NSString*) filterName
    size: (NSNumber*) size
    page: (NSNumber*) page
    completionHandler: (void (^)(JSAPIPageResourceSimpleReferenceResourceObject_* output, NSError* error)) handler;



@end
