#import <Foundation/Foundation.h>
#import "JSAPIArtistResource.h"
#import "JSAPIPageResourceArtistResource_.h"
#import "JSAPIPageResourceTemplateResource_.h"
#import "JSAPIResult.h"
#import "JSAPITemplateResource.h"
#import "JSAPIApi.h"

/**
* Knetik Platform API Documentation latest 
* This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
*
* OpenAPI spec version: latest 
* Contact: support@knetik.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface JSAPIMediaArtistsApi: NSObject <JSAPIApi>

extern NSString* kJSAPIMediaArtistsApiErrorDomain;
extern NSInteger kJSAPIMediaArtistsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(JSAPIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Adds a new artist in the system
/// Adds a new artist in the system. Use specific media contributions endpoint to add contributions
///
/// @param artistResource The new artist (optional)
/// 
///  code:201 message:"Created",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIArtistResource*
-(NSURLSessionTask*) addArtistWithArtistResource: (JSAPIArtistResource*) artistResource
    completionHandler: (void (^)(JSAPIArtistResource* output, NSError* error)) handler;


/// Create an artist template
/// Artist Templates define a type of artist and the properties they have
///
/// @param artistTemplateResource The artist template resource object (optional)
/// 
///  code:201 message:"Created",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPITemplateResource*
-(NSURLSessionTask*) createArtistTemplateWithArtistTemplateResource: (JSAPITemplateResource*) artistTemplateResource
    completionHandler: (void (^)(JSAPITemplateResource* output, NSError* error)) handler;


/// Removes an artist from the system IF no resources are attached to it
/// 
///
/// @param _id The artist id
/// 
///  code:204 message:"No Content",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return 
-(NSURLSessionTask*) deleteArtistWithId: (NSNumber*) _id
    completionHandler: (void (^)(NSError* error)) handler;


/// Delete an artist template
/// If cascade = 'detach', it will force delete the template even if it's attached to other objects
///
/// @param _id The id of the template
/// @param cascade The value needed to delete used templates (optional)
/// 
///  code:204 message:"No Content",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return 
-(NSURLSessionTask*) deleteArtistTemplateWithId: (NSString*) _id
    cascade: (NSString*) cascade
    completionHandler: (void (^)(NSError* error)) handler;


/// Loads a specific artist details
/// 
///
/// @param _id The artist id
/// @param showContributions The number of contributions to show fetch (optional)
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIArtistResource*
-(NSURLSessionTask*) getArtistWithId: (NSNumber*) _id
    showContributions: (NSNumber*) showContributions
    completionHandler: (void (^)(JSAPIArtistResource* output, NSError* error)) handler;


/// Get a single artist template
/// 
///
/// @param _id The id of the template
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPITemplateResource*
-(NSURLSessionTask*) getArtistTemplateWithId: (NSString*) _id
    completionHandler: (void (^)(JSAPITemplateResource* output, NSError* error)) handler;


/// List and search artist templates
/// 
///
/// @param size The number of objects returned per page (optional) (default to 25)
/// @param page The number of the page returned, starting with 1 (optional) (default to 1)
/// @param order A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional) (default to id:ASC)
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIPageResourceTemplateResource_*
-(NSURLSessionTask*) getArtistTemplatesWithSize: (NSNumber*) size
    page: (NSNumber*) page
    order: (NSString*) order
    completionHandler: (void (^)(JSAPIPageResourceTemplateResource_* output, NSError* error)) handler;


/// Search for artists
/// 
///
/// @param filterArtistsByName Filter for artists which name *STARTS* with the given string (optional)
/// @param size The number of objects returned per page (optional) (default to 25)
/// @param page The number of the page returned, starting with 1 (optional) (default to 1)
/// @param order A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional) (default to id:ASC)
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPIPageResourceArtistResource_*
-(NSURLSessionTask*) getArtistsWithFilterArtistsByName: (NSString*) filterArtistsByName
    size: (NSNumber*) size
    page: (NSNumber*) page
    order: (NSString*) order
    completionHandler: (void (^)(JSAPIPageResourceArtistResource_* output, NSError* error)) handler;


/// Modifies an artist details
/// 
///
/// @param _id The artist id
/// @param artistResource The new artist (optional)
/// 
///  code:204 message:"No Content",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return 
-(NSURLSessionTask*) updateArtistWithId: (NSNumber*) _id
    artistResource: (JSAPIArtistResource*) artistResource
    completionHandler: (void (^)(NSError* error)) handler;


/// Update an artist template
/// 
///
/// @param _id The id of the template
/// @param artistTemplateResource The artist template resource object (optional)
/// 
///  code:204 message:"No Content",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return JSAPITemplateResource*
-(NSURLSessionTask*) updateArtistTemplateWithId: (NSString*) _id
    artistTemplateResource: (JSAPITemplateResource*) artistTemplateResource
    completionHandler: (void (^)(JSAPITemplateResource* output, NSError* error)) handler;



@end
